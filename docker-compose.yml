version: '3'

volumes:
  pg-db-data:
    driver: local
  pg-admin-data:
    driver: local

networks: 
  pg-network:
    driver: bridge

services:
    base: &base
        hostname: app
        image: pycommerce
        build:
          context: .
          dockerfile: Dockerfile
        environment: &env
            ENV: "dev"
            LOG_LEVEL: "debug"
            DB_URL: "postgresql+asyncpg://postgres:passwd@pg-db:5432/pycommerce_dev"
            SERVER_RELOAD: "false"
        depends_on:
          pg-db:
            condition: service_healthy

    app:
        <<: *base
        command: /bin/sh -c "alembic upgrade head && python -m pycommerce"
        ports:
          - "8080:8080"
        networks:
          - pg-network
    
    tests:
        <<: *base
        command: /bin/sh -c "pip install pytest pytest-asyncio && pytest tests/"
        environment:
          <<: *env
          ENV: "test"
          DB_URL: "postgresql+asyncpg://postgres:passwd@pg-db:5432/pycommerce_test"
        networks:
          - pg-network

    pg-db:
        hostname: pg-db
        image: postgres:15.2-alpine
        environment:
          POSTGRES_PASSWORD: "passwd"
        ports:
          - "5432:5432"
        volumes:
          - ./scripts/pg:/docker-entrypoint-initdb.d
          - pg-db-data:/var/lib/postgresql/data
        networks:
          - pg-network
        healthcheck:
          test: ["CMD-SHELL", "pg_isready"]
          interval: 5s
          timeout: 3s
          retries: 5

    pg-admin:
        hostname: pg-admin
        image: dpage/pgadmin4
        environment:
          PGADMIN_DEFAULT_EMAIL: "local@dev.com"
          PGADMIN_DEFAULT_PASSWORD: "passwd"
        ports:
          - "6001:80"
        volumes:
          - pg-admin-data:/var/lib/pgadmin
        depends_on:
          - pg-db
        networks:
          - pg-network
